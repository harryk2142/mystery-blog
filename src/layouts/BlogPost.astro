---
import type { CollectionEntry } from "astro:content";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import FrontmatterImage from "../components/FrontmatterImage.astro";
import NavigationBar from "../components/navigation/NavigationBar.astro";
import Meta from "../components/Meta.astro";
import "./../styles/root.css";
// type Props = CollectionEntry<"blog">["data"];
type Props = CollectionEntry<"blog">;

const post = Astro.props;
const { title, tags, description, pubDate, updatedDate, heroImage, place } =
  post.data;
import "./../styles/root.css";
import "./../styles/global.css";
---

<html lang="de">
  <head>
    <Meta title={title} description={description} />
  </head>

  <body>
    <NavigationBar isStartPage={false} />
    <main>
      <article class="blog-post">
        <div class="post-image">
          <img src={heroImage.url} alt={heroImage.alt} />
        </div>
        <header class="post-header">
          <h1>
            {title}
          </h1>
          <div class="post-meta">
            <FormattedDate date={pubDate} />
            <span> - </span>
            <span class="location">{place}</span>
          </div>
        </header>

        {
          tags && (
            <section id="tags">
              {tags.map((tag) => (
                <a href={`/tags/${tag}`} class="link-tag">
                  #{tag}
                </a>
              ))}
            </section>
          )
        }
        <hr />
        <section class="post-content">
          <slot />
        </section>
        <!-- <div class="hero-image">
          {
            heroImage && (
				<FrontmatterImage blogpost={post}
              <img
                width={1020}
                height={510}
                src={heroImage.url}
                alt={heroImage.alt}
              />
            )
          }
        </div> -->
        <!-- <div class="prose">
          <div class="title">
            <div class="date">
              <FormattedDate date={pubDate} />
              {
                updatedDate && (
                  <div class="last-updated-on">
                    Last updated on <FormattedDate date={updatedDate} />
                  </div>
                )
              }
            </div>
            <h1>{title}</h1>
            <hr />
          </div>
          
        </div> -->
      </article>
    </main>
    <style>
      /* img {
        max-height: 30rem;
        width: auto;
        height: 100%;
      } */
      .blog-post {
        /* margin: 20px auto;
        border: 1px solid #ccc;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        border-radius: 8px;
        overflow: hidden; */
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
        row-gap: 0.5rem;
      }
      .post-header {
        text-align: center;
        line-height: 1;
        > h1 {
          margin-bottom: 1rem;
        }
      }
      .post-image {
        overflow: hidden;
        border-radius: 1rem;

        border: 1px solid #ccc;
        /* box-shadow: 0 4px 8px rgba(0,0,0,0.1);           */
        margin: 2rem 0;
        box-shadow: 0 4px 8px black;
        display: flex;
        justify-content: center;
        align-items: center;
        max-width: calc(100% - 2rem);
        img {
          max-height: 30rem;
          width: 100%;
        }
      }
      #tags {
        margin: 1rem;
        /* margin-bottom: 0.5rem; */
        text-align: center;
        font-size: smaller;
        word-spacing: 1rem;
        & .link-tag {
          color: var(--accent);
          text-decoration: none;
        }

        & .link-tag:hover {
          color: var(--element-water-dark);
        }
      }
      hr {
        border: 2px solid black;
        width: 100%;
        margin: 1rem 0;
      }
      .post-content {
        padding: 0 2rem;
        text-align: justify;
      }
    </style>
    <Footer />
  </body>
</html>
